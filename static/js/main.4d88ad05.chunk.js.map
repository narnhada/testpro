{"version":3,"sources":["page/Graph.js","page/Action.js","page/Map.js","page/Login.js","page/Join.js","page/Header.js","tem/Front.js","tem/Main.js","App.js","serviceWorker.js","index.js","json/dong1.geojson"],"names":["Graph","dong","fa","useState","graphop","setGraphop","setList","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","setData","listset","jsondata","a","post","fetch","method","headers","body","JSON","stringify","then","response","json","message","console","log","push","sang","people","Pur","sung","tempLabels","tempDatasets","tempDatasetbackcol","length","i","gil","totalscore","palete","produce","draft","useEffect","makeData","className","onClick","e","target","value","width","height","options","title","display","text","fontSize","scales","yAxes","ticks","min","stepSize","legend","position","Action","graphstate","setGraphstate","Map","setDong","setFa","fanum","Object","setJsondata","script","document","createElement","async","src","head","appendChild","onload","kakao","maps","load","mapContainer","getElementById","mapOption","center","LatLng","level","map","customOverlay","CustomOverlay","$","getJSON","geojson","features","coordinates","name","each","index","val","geometry","properties","SIG_CD","EMD_KOR_NM","sig_cd","path","points","j","coordinate","point","x","y","fillColor","polygon","Polygon","strokeWeight","strokeColor","strokeOpacity","fillOpacity","polygons","event","addListener","mouseEvent","setOptions","setContent","setPosition","latLng","setMap","displayArea","id","classes","charset","parse","Login","Loginstate","setId","pw","setPw","onSubmit","alert","window","sessionStorage","setItem","location","replace","type","onChange","placeholder","to","Join","idcheck","setIdcheck","repw","setRepw","setName","age","setAge","checkmessage","setCheckMessage","Header","loginstate","setLoginstate","joinstate","setJoinstate","header","setHeader","getItem","Front","Main","props","App","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.4d88ad05.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Axios from \"axios\";\r\nimport { produce } from \"immer\";\r\nfunction Graph(dong, fa) {\r\n  const [graphop, setGraphop] = useState(\"\");\r\n  const [list, setList] = useState(\"\");\r\n  const [dong1, setDong1] = useState(dong.dong);\r\n  const [data, setData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: [],\r\n        backgroundColor: [],\r\n        borderColor: [],\r\n        borderWidth: 2,\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n  var listset = [];\r\n  var jsondata = [];\r\n  async function makeData() {\r\n    const post = {\r\n      dong: dong.dong,\r\n    };\r\n\r\n    \r\n      await fetch(\"/api/graph\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((message) => {\r\n          console.log(message);\r\n          setList(message);\r\n          listset.push(message);\r\n        });\r\n    \r\n    \r\n      if (graphop === \"상권지표\") {\r\n        jsondata.push(listset[0].sang);\r\n      } else if (graphop === \"집객력\") {\r\n        jsondata.push(listset[0].people);\r\n      } else if (graphop === \"구매력\") {\r\n        jsondata.push(listset[0].Pur);\r\n      } else if (graphop === \"성장성\") {\r\n        jsondata.push(listset[0].sung);\r\n      }\r\n    \r\n\r\n    const tempLabels = [];\r\n    const tempDatasets = [];\r\n    const tempDatasetbackcol = [];\r\n    if (jsondata.length !== 0) {\r\n      for (let i = 0; i < jsondata[0].length; i++) {\r\n        tempLabels.push(jsondata[0][i].gil);\r\n        tempDatasets.push(jsondata[0][i].totalscore);\r\n      }\r\n      for (let i = 0; i < tempDatasets.length; i++) {\r\n        tempDatasetbackcol.push(palete[i]);\r\n      }\r\n    }\r\n    setData(\r\n      produce((draft) => {\r\n        draft.labels = tempLabels;\r\n        draft.datasets[0][\"data\"] = tempDatasets;\r\n        draft.datasets[0][\"borderColor\"] = tempDatasetbackcol;\r\n        draft.datasets[0][\"backgroundColor\"] = tempDatasetbackcol;\r\n        return draft;\r\n      })\r\n    );\r\n  }\r\n  const palete = [\r\n    \"rgb(255,155,255)\",\r\n    \"rgb(255,55,255)\",\r\n    \"rgb(55,155,255)\",\r\n    \"rgb(55,0,255)\",\r\n    \"rgb(0,0,155)\",\r\n    \"rgb(0,0,55)\",\r\n    \"rgb(0,0,0)\",\r\n    \"rgb(0,255,0)\",\r\n    \"rgb(55,255,0)\",\r\n    \"rgb(255,0,155)\",\r\n    \"rgb(255,55,55)\",\r\n    \"rgb(255,55,155)\",\r\n    \"rgb(255,155,255)\",\r\n    \"rgb(255,255,255)\",\r\n  ];\r\n  const graphlistop = (e) => {\r\n    setGraphop(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    makeData();\r\n  }, [graphop, dong.dong]);\r\n  return (\r\n    <>\r\n      <div className=\"graphlist\">\r\n        <select onClick={graphlistop}>\r\n          <option value=\"\"></option>\r\n          <option value=\"상권지표\">상권지표</option>\r\n          <option value=\"집객력\">집객력</option>\r\n          <option value=\"구매력\">구매력</option>\r\n          <option value=\"성장성\">성장성</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"graph\">\r\n        <Bar\r\n          width={300}\r\n          height={300}\r\n          data={data}\r\n          options={{\r\n            title: {\r\n              display: true,\r\n              text: dong.dong + \" \" + graphop,\r\n              fontSize: 20,\r\n            },\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    min: 0, // 스케일에 대한 최솟갓 설정, 0 부터 시작\r\n                    stepSize: 10, // 스케일에 대한 사용자 고정 정의 값\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            legend: {\r\n              display: false,\r\n              position: \"right\",\r\n            },\r\n          }}\r\n        ></Bar>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/Action.css\";\r\nimport { BsBarChartFill, BsClipboard, BsGraphUp } from \"react-icons/bs\";\r\nimport { FiInstagram } from \"react-icons/fi\";\r\nimport { FaRegThumbsUp } from \"react-icons/fa\";\r\nimport Graph from \"./Graph\";\r\n\r\nconst Action = (dong, fa) => {\r\n  const [dong1, setDong1] = useState(dong.dong);\r\n  const [graphstate, setGraphstate] = useState(false);\r\n\r\n  const graph = () => {\r\n    if (graphstate) {\r\n      setGraphstate(false);\r\n    } else {\r\n      setGraphstate(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Action\">\r\n      <div className=\"sel\">\r\n        {dong.dong === \"\" ? <p>동을 선택해주세요</p> : <p>{dong.dong}</p>}\r\n\r\n        <div className=\"icons\">\r\n          <BsBarChartFill onClick={graph}></BsBarChartFill>\r\n          <BsClipboard></BsClipboard>\r\n          <FiInstagram></FiInstagram>\r\n          <FaRegThumbsUp></FaRegThumbsUp>\r\n          <BsGraphUp></BsGraphUp>\r\n        </div>\r\n        {/* {fa.fa !== \"\" && dong.dong !== \"\" ? (\r\n          <p></p>\r\n        ) : (\r\n          <div className=\"sr\">\r\n            <p>\r\n              {dong.dong}에 {fa.fa}\r\n            </p>\r\n          </div>\r\n        )} */}\r\n      </div>\r\n      {graphstate ? (\r\n        <div className=\"option\">\r\n          <Graph dong={dong.dong} fa={fa.fa}></Graph>\r\n        </div>\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Action;\r\n","/*global kakao*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport a from \"../json/dong1.geojson\";\r\nimport $ from \"jquery\";\r\nimport \"../css/Map.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Action from \"./Action\";\r\n\r\nfunction Map() {\r\n  const [sig_cd1, setSig_cd1] = useState(\"\");\r\n  const [gu, setGu] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [dong, setDong] = useState(\"\");\r\n  const [fa, setFa] = useState(\"\");\r\n  const [fanum, setFanum] = useState();\r\n  const [jsondata, setJsondata] = useState(Object);\r\n  const palete = [\r\n    \"rgb(255,155,255)\",\r\n    \"rgb(255,55,255)\",\r\n    \"rgb(55,155,255)\",\r\n    \"rgb(55,0,255)\",\r\n    \"rgb(0,0,155)\",\r\n    \"rgb(0,0,55)\",\r\n    \"rgb(0,0,0)\",\r\n    \"rgb(0,255,0)\",\r\n    \"rgb(55,255,0)\",\r\n    \"rgb(255,0,155)\",\r\n    \"rgb(255,55,55)\",\r\n    \"rgb(255,55,155)\",\r\n    \"rgb(255,155,255)\",\r\n    \"rgb(255,255,255)\",\r\n  ];\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.async = true;\r\n    script.src =\r\n      \"https://dapi.kakao.com/v2/maps/sdk.js?appkey=5f5809befc934f9413253553bc2551f6&autoload=false\";\r\n    document.head.appendChild(script);\r\n    script.onload = () => {\r\n      kakao.maps.load(() => {\r\n        // var el = document.getElementById(\"map\");\r\n        var mapContainer = document.getElementById(\"map\"), // 지도를 표시할 div\r\n          mapOption = {\r\n            center: new kakao.maps.LatLng(37.536, 127.0), // 지도의 중심좌표\r\n            level: 8, // 지도의 확대 레벨\r\n          };\r\n\r\n        var map = new kakao.maps.Map(mapContainer, mapOption);\r\n        var customOverlay = new kakao.maps.CustomOverlay();\r\n\r\n        $.getJSON(a, function (geojson) {\r\n          var data = geojson.features;\r\n          var coordinates = []; //좌표 저장할 배열\r\n          var name = \"\"; //행정 구 이름\r\n          var sig_cd = \"\";\r\n\r\n          $.each(data, function (index, val) {\r\n            coordinates = val.geometry.coordinates;\r\n            sig_cd = val.properties.SIG_CD;\r\n            name = val.properties.EMD_KOR_NM;\r\n\r\n            displayArea(coordinates, name, sig_cd, jsondata);\r\n          });\r\n        });\r\n\r\n        var polygons = []; //function 안 쪽에 지역변수로 넣으니깐 폴리곤 하나 생성할 때마다 배열이 비어서 클릭했을 때 전체를 못 없애줌.  그래서 전역변수로 만듦.\r\n\r\n        //행정구역 폴리곤\r\n        function displayArea(coordinates, name, sig_cd, jsondata) {\r\n          var path = []; //폴리곤 그려줄 path\r\n          var points = []; //중심좌표 구하기 위한 지역구 좌표들\r\n          let j = 0;\r\n          $.each(coordinates[0][0], function (index, coordinate) {\r\n            //console.log(coordinates)를 확인해보면 보면 [0]번째에 배열이 주로 저장이 됨.  그래서 [0]번째 배열에서 꺼내줌.\r\n\r\n            var point = new Object();\r\n            point.x = coordinate[1];\r\n            point.y = coordinate[0];\r\n            points.push(point);\r\n            path.push(new kakao.maps.LatLng(coordinate[1], coordinate[0])); //new daum.maps.LatLng가 없으면 인식을 못해서 path 배열에 추가\r\n          });\r\n\r\n          if (fa === \"\") {\r\n          } else {\r\n            let i = 0;\r\n            for (i = 0; i < jsondata.length; i++) {\r\n              if (jsondata[i].dong === name) {\r\n                j++;\r\n              }\r\n            }\r\n          }\r\n\r\n          let fillColor = \"#fff\";\r\n          if (j >= 0 && j < 20) {\r\n            fillColor = palete[2];\r\n          }\r\n          if (j >= 20 && j < 50) {\r\n            fillColor = palete[1];\r\n          }\r\n          if (j >= 50 && j < 70) {\r\n            fillColor = palete[0];\r\n          }\r\n          if (j >= 70 && j < 100) {\r\n            fillColor = palete[3];\r\n          }\r\n          if (j >= 100) {\r\n            fillColor = palete[4];\r\n          }\r\n\r\n          // 다각형을 생성합니다\r\n          var polygon = new kakao.maps.Polygon({\r\n            map: map, // 다각형을 표시할 지도 객체\r\n            path: path,\r\n            strokeWeight: 2,\r\n            strokeColor: \"#004c80\",\r\n            strokeOpacity: 0.8,\r\n            fillColor: fillColor,\r\n            fillOpacity: 0.7,\r\n          });\r\n\r\n          polygons.push(polygon); //폴리곤 제거하기 위한 배열\r\n\r\n          // 다각형에 click 이벤트를 등록하고 이벤트가 발생하면 해당 지역 확대을 확대합니다.\r\n          kakao.maps.event.addListener(polygon, \"click\", function () {\r\n            setDong(name);\r\n          });\r\n          kakao.maps.event.addListener(polygon, \"mouseover\", function (\r\n            mouseEvent\r\n          ) {\r\n            polygon.setOptions({\r\n              fillColor: \"#09f\",\r\n            });\r\n\r\n            customOverlay.setContent(\r\n              '<p>' +\r\n                name +\r\n                \" \" +\r\n                j +\r\n                \"개입니다\" +\r\n                \"</p>\"\r\n            );\r\n\r\n            customOverlay.setPosition(mouseEvent.latLng);\r\n            customOverlay.setMap(map);\r\n          });\r\n          kakao.maps.event.addListener(polygon, \"mouseout\", function () {\r\n            polygon.setOptions({\r\n              fillColor: fillColor,\r\n            });\r\n            customOverlay.setMap(null);\r\n          });\r\n        }\r\n      });\r\n    };\r\n  }, [fa]);\r\n  const namei = () => {\r\n    console.log(dong);\r\n  };\r\n  const onsel = (e) => {\r\n    setFa(e.target.value);\r\n    const post = {\r\n      classes: e.target.value,\r\n    };\r\n    const josndatamake = () => {\r\n      fetch(\"/api/upjong\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          charset: \"utf-8\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      })\r\n        .then((response) => response.text())\r\n        .then((message) => {\r\n          setJsondata(JSON.parse(message));\r\n        });\r\n    };\r\n    josndatamake();\r\n  };\r\n  const OnSubmit = (e) => {};\r\n  return (\r\n    <>\r\n      <div className=\"map\" id=\"map\"></div>\r\n      <Action dong={dong} fa={fanum}></Action>\r\n      <div className=\"list\">\r\n        <select onClick={onsel}>\r\n          <option></option>\r\n          <option value=\"커피전문점/카페/다방\">커피전문점/카페/다방</option>\r\n          <option value=\"후라이드/양념치킨\">치킨집</option>\r\n          <option value=\"한식/백반/한정식\">한식</option>\r\n          <option value=\"족발/보쌈전문\">족발</option>\r\n          <option value=\"음식점-일식\">일식</option>\r\n          <option value=\"중국음식/중국집\">중국음식/중국집</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* <form onSubmit={OnSubmit} >\r\n        <input type=\"submit\" value=\"전송\"></input>\r\n\r\n      </form> */}\r\n      {/* <button onClick={namei}>구이름</button> */}\r\n\r\n      {/* {(window.sessionStorage.getItem(\"message\")!==\"\"?(<img src={window.sessionStorage.getItem(\"message\")}></img>) :(<p>이미지가 없음 </p>))} */}\r\n    </>\r\n    //<Test></Test>\r\n    //<Test2></Test2>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../css/Login.css\";\r\nimport { FiUserPlus, FiMap, FiUserMinus } from \"react-icons/fi\";\r\n\r\nconst Login = (Loginstate) => {\r\n  const [id, setId] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n  const [onLogin, setOnLogin] = useState(\"login\");\r\n\r\n  const OnSubmit = (e) => {\r\n    const post = {\r\n      id: id,\r\n      pw: pw,\r\n    };\r\n    fetch(\"/api/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(post),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((message) => {\r\n        console.log(message);\r\n        if (message === \"re\") {\r\n          alert(\"다시 시도\");\r\n        } else {\r\n          window.sessionStorage.setItem(\"id\", id);\r\n          console.log(\"sus\");\r\n          window.location.replace(\"/\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Back\">\r\n      <div className=\"onLogin\">\r\n        <form onSubmit={OnSubmit} method=\"post\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"id\"\r\n            onChange={(e) => setId(e.target.value)}\r\n            placeholder=\"id\"\r\n          />\r\n\r\n          <input\r\n            type=\"password\"\r\n            name=\"pw\"\r\n            onChange={(e) => setPw(e.target.value)}\r\n            placeholder=\"password\"\r\n          />\r\n\r\n          <input type=\"submit\" value=\"Login\" />\r\n          <Link to=\"/join\">\r\n            <button className=\"joinbutton\">join</button>\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"../css/Login.css\";\r\n\r\nfunction Join() {\r\n  const [idcheck, setIdcheck] = useState(false);\r\n  const [id, setId] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n  const [repw, setRepw] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [checkmessage, setCheckMessage] = useState(\"\");\r\n  const [joinmessage, setJoinmessage] = useState(\"\");\r\n\r\n  const idch = () => {\r\n    //setIdcheck(true);\r\n    const post = {\r\n      id: id,\r\n    };\r\n    fetch(\"/api/checkId\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(post),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((message) => {\r\n        console.log(message);\r\n        setCheckMessage(message);\r\n        setIdcheck(true);\r\n      });\r\n  };\r\n  const OnSubmit = (e) => {\r\n    //e.preventdefault();\r\n    if (pw === repw) {\r\n      const post = {\r\n        id: id,\r\n        pw: pw,\r\n        name: name,\r\n        age: age,\r\n      };\r\n      fetch(\"/api/insert\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      })\r\n        .then((response) => response.text())\r\n        .then((message) => {\r\n          console.log(message);\r\n        });\r\n      alert(\"가입완료\");\r\n      window.location.replace(\"/\");\r\n    } else {\r\n      alert(\"비밀번호가 맞지 않습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Back\">\r\n      <div className=\"Join\">\r\n        <form onSubmit={OnSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"Id\"\r\n            onChange={(e) => setId(e.target.value)}\r\n            placeholder=\"id\"\r\n          />\r\n          <input type=\"button\" onClick={idch} value=\"아이디 중복 검사\" />\r\n          {idcheck === true ? <p>{checkmessage}</p> : <p></p>}\r\n          <input\r\n            type=\"password\"\r\n            name=\"Pw\"\r\n            onChange={(e) => setPw(e.target.value)}\r\n            placeholder=\"password\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"rePw\"\r\n            onChange={(e) => setRepw(e.target.value)}\r\n            placeholder=\"REpassword\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"name\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"age\"\r\n            onChange={(e) => setAge(e.target.value)}\r\n            placeholder=\"age\"\r\n          />\r\n\r\n          <input type=\"submit\" value=\"Join\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Join;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FcHome } from \"react-icons/fc\";\r\nimport { AiOutlineLogin } from \"react-icons/ai\";\r\nimport { FiLogOut, } from \"react-icons/fi\";\r\nimport { BsFillPersonPlusFill } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Header.css\";\r\nimport Login from \"./Login\";\r\nimport Join from \"./Join\";\r\n\r\nfunction Header() {\r\n  const [loginstate, setLoginstate] = useState(false);\r\n  const [joinstate, setJoinstate] = useState(false);\r\n  const [header, setHeader] =useState(\"Header\");\r\n  \r\n  const onclick = () => {\r\n    if(joinstate){\r\n      setJoinstate(false);\r\n    }\r\n    if (loginstate) {\r\n      setLoginstate(false);\r\n      setHeader(\"Header\");\r\n    } else {\r\n      setLoginstate(true);\r\n      setHeader(\"onHeader\");\r\n    }\r\n  };\r\n  const onclick2 = () => {\r\n    if(loginstate){\r\n      setLoginstate(false);\r\n    }\r\n    if (joinstate) {\r\n      setJoinstate(false);\r\n      setHeader(\"Header\");\r\n    } else {\r\n      setJoinstate(true);\r\n      setHeader(\"onHeader\");\r\n    }\r\n  };\r\n  const logout = () => {\r\n    window.sessionStorage.setItem(\"id\", null);\r\n    window.location.replace(\"/\");\r\n  };\r\n  return (\r\n    <div className={header}>\r\n      <div className=\"homebutton\">\r\n        <Link to=\"/\">\r\n          <FcHome></FcHome>\r\n        </Link>\r\n        \r\n      </div>\r\n      <div className=\"actionbutton\">\r\n          {window.sessionStorage.getItem(\"id\") === null ? (\r\n            <>\r\n              <AiOutlineLogin onClick={onclick}></AiOutlineLogin>\r\n              <BsFillPersonPlusFill onClick={onclick2}></BsFillPersonPlusFill>\r\n            </>\r\n          ) : (\r\n            <FiLogOut onClick={logout}></FiLogOut>\r\n          )}\r\n        </div>\r\n      {loginstate ? <Login></Login> : <p></p>}\r\n      {joinstate? <Join></Join>:<p></p>}\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Map from \"../page/Map\";\r\nimport Header from \"../page/Header\";\r\nimport Login from \"../page/Login\";\r\n\r\n\r\nfunction Front() {\r\n  return (\r\n    <div className=\"Front\">\r\n      <Header></Header>\r\n      <Map></Map>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Front;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Front from \"./Front\";\r\n\r\nfunction Main(props) {\r\n\r\n  return (\r\n    <div className=\"Main\">\r\n      <Front></Front>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Main from \"./tem/Main\";\r\nimport { connect } from \"react-redux\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Route exact path=\"/map\" component={Main}></Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createStore, combineReducers } from \"redux\";\r\n\r\nReactDOM.render(\r\n  \r\n    <BrowserRouter>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </BrowserRouter>\r\n,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/dong1.81986e43.geojson\";"],"sourceRoot":""}